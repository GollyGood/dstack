<?php

/**
 * Configuration for webgrind
 * @author Jacob Oettinger
 * @author Joakim NygÃ¥rd
 */
class Webgrind_Config extends Webgrind_MasterConfig {
  /**
   * Automatically check if a newer version of webgrind is available for download
   */
  static $checkVersion = true;
  static $hideWebgrindProfiles = true;

  /**
   * Writable dir for information storage.
   * If empty, will use system tmp folder or xdebug tmp
   */
  static $storageDir = '<%= node['utils']['webgrind']['storageDir'] %>';
  static $profilerDir = '<%= node['utils']['webgrind']['profilerDir'] %>';

  /**
   * Suffix for preprocessed files
   */
  static $preprocessedSuffix = '<%= node['utils']['webgrind']['preprocessedSuffix'] %>';

  static $defaultTimezone = '<%= node['utils']['webgrind']['defaultTimezone'] %>';
  static $dateFormat = '<%= node['utils']['webgrind']['dateFormat'] %>';
  static $defaultCostformat = '<%= node['utils']['webgrind']['defaultCostformat'] %>'; // 'percent', 'usec' or 'msec'
  static $defaultFunctionPercentage = <%= node['utils']['webgrind']['defaultFunctionPercentage'] %>;
  static $defaultHideInternalFunctions = <%= node['utils']['webgrind']['defaultHideInternalFunctions'] %>;

  /**
   * Path to python executable
   */
  static $pythonExecutable = '<%= node['utils']['webgrind']['pythonExecutable'] %>';

  /**
   * Path to graphviz dot executable
   */
  static $dotExecutable = '<%= node['utils']['webgrind']['dotExecutable'] %>';

  /**
   * sprintf compatible format for generating links to source files. 
   * %1$s will be replaced by the full path name of the file
   * %2$d will be replaced by the linenumber
   */
  static $fileUrlFormat = '<%= node['utils']['webgrind']['fileUrlFormat'] %>'; // Built in fileviewer
  //static $fileUrlFormat = 'txmt://open/?url=file://%1$s&line=%2$d'; // Textmate
  //static $fileUrlFormat = 'file://%1$s'; // ?

  /**
   * format of the trace drop down list
   * default is: invokeurl (tracefile_name) [tracefile_size]
   * the following options will be replaced:
   *   %i - invoked url
   *   %f - trace file name
   *   %s - size of trace file
   *   %m - modified time of file name (in dateFormat specified above)
   */
  static $traceFileListFormat = '<%= node['utils']['webgrind']['traceFileListFormat'] %>';


  #########################
  # BELOW NOT FOR EDITING #
  #########################

  /**
   * Regex that matches the trace files generated by xdebug
   */
  static function xdebugOutputFormat() {
    $outputName = ini_get('xdebug.profiler_output_name');
    if($outputName=='') // Ini value not defined
      $outputName = '/^cachegrind\.out\..+$/';
    else
    $outputName = '/^'.preg_replace('/(%[^%])+/', '.+', $outputName).'$/';
      return $outputName;
  }

  /**
   * Directory to search for trace files
   */
  static function xdebugOutputDir() {
    $dir = ini_get('xdebug.profiler_output_dir');
    if($dir=='') // Ini value not defined
      return realpath(Webgrind_Config::$profilerDir).'/';
    return realpath($dir).'/';
  }

  /**
   * Writable dir for information storage
   */
  static function storageDir() {
    if (!empty(Webgrind_Config::$storageDir))
    return realpath(Webgrind_Config::$storageDir).'/';

    if (!function_exists('sys_get_temp_dir') || !is_writable(sys_get_temp_dir())) {
      # use xdebug setting
      return Webgrind_Config::xdebugOutputDir();
    }

    return realpath(sys_get_temp_dir()).'/';
  }
}
